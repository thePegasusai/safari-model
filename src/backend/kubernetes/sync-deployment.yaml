apiVersion: apps/v1
kind: Deployment
metadata:
  name: sync-service
  namespace: wildlife-safari
  labels:
    app: sync-service
    component: backend
    tier: data-sync
spec:
  # High availability with 3 replicas as per system availability requirement
  replicas: 3
  # Zero-downtime deployment strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sync-service
  template:
    metadata:
      labels:
        app: sync-service
        tier: data-sync
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002"
        prometheus.io/path: "/metrics"
        checksum/config: ${CONFIG_CHECKSUM}
    spec:
      containers:
        - name: sync-service
          image: wildlife-safari/sync-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8002
              protocol: TCP
              name: http
            - containerPort: 8012
              protocol: TCP
              name: metrics
          # Resource allocation based on Go service requirements
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: sync-service-config
                  key: DB_HOST
            - name: QUEUE_HOST
              valueFrom:
                configMapKeyRef:
                  name: sync-service-config
                  key: QUEUE_HOST
            - name: MAX_RETRIES
              value: "3"
            - name: LOG_LEVEL
              value: "INFO"
            - name: REGION
              valueFrom:
                configMapKeyRef:
                  name: sync-service-config
                  key: REGION
          # Health checks for high availability
          livenessProbe:
            httpGet:
              path: /health
              port: 8002
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8002
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /startup
              port: 8002
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 30
      # Security context for enhanced security
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        readOnlyRootFilesystem: true
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - sync-service
                topologyKey: kubernetes.io/hostname
      # Grace period for proper shutdown
      terminationGracePeriodSeconds: 60