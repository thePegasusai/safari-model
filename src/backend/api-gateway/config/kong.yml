# Kong API Gateway Configuration for Wildlife Detection Safari Pok√©dex
# Version: 1.0.0
# Kong Version: 3.3

_format_version: "3.0"
_transform: true

services:
  # Authentication Service
  - name: auth-service
    url: http://auth-service:8080
    protocol: http
    connect_timeout: 3000
    write_timeout: 5000
    read_timeout: 5000
    retries: 3
    routes:
      - name: auth-routes
        paths:
          - /api/v1/auth
        strip_path: false
        methods:
          - POST
          - GET
        preserve_host: true
        protocols:
          - http
          - https
    plugins:
      - name: cors
        config:
          origins: ["*"]
          methods:
            - GET
            - POST
          headers:
            - Authorization
            - Content-Type
            - X-Request-ID
          exposed_headers:
            - X-Auth-Token
            - X-Request-ID
          max_age: 3600
          credentials: true
          preflight_continue: false
      - name: rate-limiting
        config:
          minute: 60
          policy: redis
          fault_tolerant: true
          redis_host: redis
          redis_port: 6379
          redis_timeout: 2000
          redis_database: 0
          hide_client_headers: false

  # Detection Service
  - name: detection-service
    url: http://detection-service:8000
    protocol: http
    connect_timeout: 10000
    write_timeout: 30000
    read_timeout: 30000
    retries: 2
    routes:
      - name: detection-routes
        paths:
          - /api/v1/detect
        strip_path: false
        methods:
          - POST
        preserve_host: true
        protocols:
          - http
          - https
    plugins:
      - name: jwt-auth
        config:
          key_claim_name: kid
          claims_to_verify:
            - exp
            - nbf
            - iss
            - sub
          supported_algs:
            - RS256
          maximum_expiration: 3600
          secret_is_base64: false
          run_on_preflight: true
      - name: rate-limiting
        config:
          minute: 60
          policy: redis
          fault_tolerant: true
          redis_host: redis
          redis_port: 6379
          redis_timeout: 2000
          redis_database: 0
          hide_client_headers: false

  # Collection Service
  - name: collection-service
    url: http://collection-service:8000
    protocol: http
    connect_timeout: 5000
    write_timeout: 10000
    read_timeout: 10000
    retries: 3
    routes:
      - name: collection-routes
        paths:
          - /api/v1/collections
        strip_path: false
        methods:
          - GET
          - POST
          - PUT
          - DELETE
        preserve_host: true
        protocols:
          - http
          - https
    plugins:
      - name: jwt-auth
        config:
          key_claim_name: kid
          claims_to_verify:
            - exp
            - nbf
            - iss
            - sub
          supported_algs:
            - RS256
          maximum_expiration: 3600
          secret_is_base64: false
          run_on_preflight: true
      - name: rate-limiting
        config:
          minute: 120
          policy: redis
          fault_tolerant: true
          redis_host: redis
          redis_port: 6379
          redis_timeout: 2000
          redis_database: 0
          hide_client_headers: false

  # Sync Service
  - name: sync-service
    url: http://sync-service:8000
    protocol: http
    connect_timeout: 5000
    write_timeout: 15000
    read_timeout: 15000
    retries: 2
    routes:
      - name: sync-routes
        paths:
          - /api/v1/sync
        strip_path: false
        methods:
          - POST
        preserve_host: true
        protocols:
          - http
          - https
    plugins:
      - name: jwt-auth
        config:
          key_claim_name: kid
          claims_to_verify:
            - exp
            - nbf
            - iss
            - sub
          supported_algs:
            - RS256
          maximum_expiration: 3600
          secret_is_base64: false
          run_on_preflight: true
      - name: rate-limiting
        config:
          minute: 30
          policy: redis
          fault_tolerant: true
          redis_host: redis
          redis_port: 6379
          redis_timeout: 2000
          redis_database: 0
          hide_client_headers: false

plugins:
  # Global CORS configuration
  - name: cors
    config:
      origins:
        - "*"
      methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      headers:
        - Authorization
        - Content-Type
        - X-Request-ID
        - X-API-Key
      exposed_headers:
        - X-Auth-Token
        - X-Request-ID
        - X-RateLimit-Remaining
        - X-RateLimit-Reset
      max_age: 3600
      credentials: true
      preflight_continue: false

  # Global security headers
  - name: response-transformer
    config:
      add:
        headers:
          - Strict-Transport-Security:max-age=31536000; includeSubDomains
          - X-Content-Type-Options:nosniff
          - X-Frame-Options:DENY
          - X-XSS-Protection:1; mode=block
          - Content-Security-Policy:default-src 'self'

  # Global rate limiting fallback
  - name: rate-limiting
    config:
      minute: 300
      policy: redis
      fault_tolerant: true
      redis_host: redis
      redis_port: 6379
      redis_timeout: 2000
      redis_database: 0
      hide_client_headers: false