# Stage 1: Builder stage for custom plugins
FROM kong:3.3-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    git \
    gcc \
    musl-dev \
    make \
    luarocks \
    openssl-dev

# Install LuaRocks packages required by plugins
RUN luarocks install lua-resty-jwt 0.2.3-0 \
    && luarocks install lua-resty-openssl 0.8.17-1 \
    && luarocks install lua-resty-redis-connector 0.11.0-0 \
    && luarocks install lua-resty-http 0.17.1-0

# Create plugin directory
WORKDIR /custom-plugins

# Copy custom plugin files
COPY ./api-gateway/plugins/jwt-auth.lua /custom-plugins/jwt-auth/handler.lua
COPY ./api-gateway/plugins/rate-limiting.lua /custom-plugins/rate-limiting/handler.lua
COPY ./api-gateway/plugins/cors.lua /custom-plugins/cors/handler.lua

# Install custom plugins
RUN cd /custom-plugins/jwt-auth && luarocks make \
    && cd /custom-plugins/rate-limiting && luarocks make \
    && cd /custom-plugins/cors && luarocks make

# Stage 2: Final stage
FROM kong:3.3-alpine

# Security: Run as non-root user
USER kong

# Copy built plugins from builder stage
COPY --from=builder /usr/local/share/lua/5.1/kong/plugins/jwt-auth /usr/local/share/lua/5.1/kong/plugins/jwt-auth
COPY --from=builder /usr/local/share/lua/5.1/kong/plugins/rate-limiting /usr/local/share/lua/5.1/kong/plugins/rate-limiting
COPY --from=builder /usr/local/share/lua/5.1/kong/plugins/cors /usr/local/share/lua/5.1/kong/plugins/cors

# Copy Kong configuration
COPY ./api-gateway/config/kong.yml /usr/local/kong/declarative/kong.yml

# Set environment variables
ENV KONG_DATABASE=off \
    KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml \
    KONG_PROXY_ACCESS_LOG=/dev/stdout \
    KONG_ADMIN_ACCESS_LOG=/dev/stdout \
    KONG_PROXY_ERROR_LOG=/dev/stderr \
    KONG_ADMIN_ERROR_LOG=/dev/stderr \
    KONG_ADMIN_LISTEN=0.0.0.0:8001 \
    KONG_PROXY_LISTEN=0.0.0.0:8000 \
    KONG_PLUGINS=bundled,jwt-auth,rate-limiting,cors \
    KONG_SSL=on \
    KONG_SSL_CIPHER_SUITE=modern \
    KONG_NGINX_WORKER_PROCESSES=auto \
    KONG_NGINX_HTTP_KEEPALIVE_TIMEOUT=60s \
    KONG_NGINX_HTTP_CLIENT_MAX_BODY_SIZE=10m \
    KONG_TRUSTED_IPS=0.0.0.0/0,::/0

# Security headers
ENV KONG_HEADERS=server_tokens=off \
    KONG_NGINX_PROXY_REAL_IP_HEADER=X-Real-IP \
    KONG_NGINX_PROXY_SET_HEADERS="X-Real-IP $remote_addr; \
    X-Forwarded-For $proxy_add_x_forwarded_for; \
    X-Forwarded-Proto $scheme; \
    X-Frame-Options DENY; \
    X-Content-Type-Options nosniff; \
    Strict-Transport-Security max-age=31536000"

# Expose ports
EXPOSE 8000 8001 8443

# Health check configuration
HEALTHCHECK --interval=10s --timeout=10s --retries=3 --start-period=30s \
    CMD kong health

# Create required directories with proper permissions
RUN mkdir -p /usr/local/kong/logs \
    && chown -R kong:kong /usr/local/kong/logs \
    && mkdir -p /usr/local/kong/ssl \
    && chown -R kong:kong /usr/local/kong/ssl

# Set working directory
WORKDIR /usr/local/kong

# Use Kong's default entrypoint
ENTRYPOINT ["/docker-entrypoint.sh"]

# Start Kong
CMD ["kong", "docker-start"]